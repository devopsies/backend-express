name: project-ci
on: [push]
jobs:
  run:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      
      - name: "Build base image"
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: |
          DOCKER_USER=mdnfiras
          BACK_IMG_TAG=$(sha256sum package.json | cut -c1-15 )
          RES=$(curl -u mdnfiras:$DOCKER_TOKEN https://registry.hub.docker.com/v2/repositories/$DOCKER_USER/base-back/tags | { grep $BACK_IMG_TAG || true; } )
          if [ -z "$RES" ]; then
            echo "Did not find image with tag $BACK_IMG_TAG"
            docker login -u $DOCKER_USER -p $DOCKER_TOKEN
            docker build -f base.Dockerfile -t $DOCKER_USER/base-back:$BACK_IMG_TAG .
            docker push $DOCKER_USER/base-back:$BACK_IMG_TAG
            docker tag $DOCKER_USER/base-back:$BACK_IMG_TAG $DOCKER_USER/base-back:latest
            docker push $DOCKER_USER/base-back:latest
            docker logout
          else
            echo "Found image with tag $BACK_IMG_TAG"
          fi
          
      - name: "Build and containerize app"
        run: |
          DOCKER_USER=mdnfiras
          docker pull $DOCKER_USER/base-back:latest
          docker tag $DOCKER_USER/base-back:latest base-back:latest
          docker build -t back-app .
          
      - name: "Test containerized app"
        run: |
          docker run -d -p 27017:27017 -p 27019:27019 -e MONGO_INITDB_ROOT_USERNAME=user1 -e MONGO_INITDB_ROOT_PASSWORD=pass1 --name my-db mongo
          sleep 5
          docker run -d -p 3000:3000 -e DB_USERNAME=user1 -e DB_PASSWORD=pass1 -e DB_HOST=$(hostname) --name my-app back-app
          sleep 5
          docker ps --all
          docker logs my-app
          curl localhost:3000
          docker stop my-app
          docker stop my-db
          
      - name: "Push containerized app"
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          DOCKER_USER=mdnfiras
          docker login -u $DOCKER_USER -p $DOCKER_TOKEN
          docker tag back-app $DOCKER_USER/back-app:$GITHUB_RUN_NUMBER
          docker push $DOCKER_USER/back-app:$GITHUB_RUN_NUMBER
          docker tag $DOCKER_USER/back-app:$GITHUB_RUN_NUMBER $DOCKER_USER/back-app:latest
          docker push $DOCKER_USER/back-app:latest
          docker logout
